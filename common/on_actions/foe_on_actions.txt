on_actions = {

	on_startup = {
		effect = {
			log = "[GetDateText] Province main on_startup begin"
			180 = {
				add_province_modifier = {
					static_modifiers = { pink_cloud }
					province = { 
						all_provinces = yes
					}
				}
			}
			234 = {
				add_province_modifier = {
					static_modifiers = { pink_cloud }
					province = { 
						all_provinces = yes
					}
				}
			}
			415 = {
				add_province_modifier = {
					static_modifiers = { pink_cloud }
					province = { 
						id = 5104
						id = 12891
					}
				}
			}

			798 = {
				add_province_modifier = {
					static_modifiers = { ghoul_horde }
					province = { 
						id = 9272
					}
				}
			}

			every_country = {
				if = {
					limit = {
						is_ai = no
					}
					set_variable = { eaw_welcome_screen = 1 }
				}
			}



			OWE = {
 				set_variable = {
					var = lightbringer_status_var
					value = 0
				}
				set_variable = {
    				var = lp_apathy
    				value = 0
				}
				set_variable = {
    				var = lp_watcher_var
    				value = 0
				}
 			}

 			553 = { set_state_flag = mwy_feudal_realm_state_flag }
			789 = { set_state_flag = mwy_feudal_realm_state_flag }
			187 = { set_state_flag = mwy_feudal_realm_state_flag }
			581 = { set_state_flag = mwy_feudal_realm_state_flag }
			804 = { set_state_flag = mwy_feudal_realm_state_flag }

 			# Scav State Flags
 				812 = {
 					set_state_flag = scav_unique_loot_state_flag
 				}
 				524 = {
 					set_state_flag = scav_unique_loot_state_flag
 				}
 				478 = {
 					set_state_flag = scav_unique_loot_state_flag
 				}
 				234 = {
 					set_state_flag = scav_unique_loot_state_flag
 				}
 				180 = {
 					set_state_flag = scav_unique_loot_state_flag
 				}
 				798 = {
 					set_state_flag = scav_unique_loot_state_flag
 				}
 				538 = {
 					set_state_flag = scav_unique_loot_state_flag
 				}
			
			every_country = {
				if = {
					limit = {
						is_ai = yes
						is_major = no
					}
					add_ideas = UTILITY_minor_resistance_buff_idea
				}
			}
 			#

 			# Game Rules
 				### EYE Debuff
					if = {
						limit = {
							has_game_rule = {
								rule = EYE_debuff_rule
								option = MINOR_DEBUFF
							}
						}
						every_country = {
							limit = {
								tag = EYE
							}
							add_ideas = EYE_minor_debuff_idea
						}
					}
					if = {
						limit = {
							has_game_rule = {
								rule = EYE_debuff_rule
								option = MAJOR_DEBUFF
							}
						}
						every_country = {
							limit = {
								tag = EYE
							}
							add_ideas = EYE_major_debuff_idea
						}
					}
				#

				### EYE SSC Breakup
					if = {
						limit = {
							has_game_rule = {
								rule = EYE_SSC_explosion_rule
								option = BREAKUP
							}
						}
						EYE = {
							country_event = utility.5
						}
						SSC = {
							country_event = utility.6
						}
					}
				#

				### SHA Breakup
				if = {
					limit = {
						has_game_rule = {
							rule = SHA_explosion_rule
							option = BREAKUP
						}
					}
					SHA = {
						country_event = utility.7
					}
				}
			#
				
		}
	}

	on_unit_leader_created = {
		effect = {
			log = "[GetDateText]: ROOT: [Root.GetName] FROM: [From.GetName] on_unit_leader_created"
			if = {
				limit = {
					#OR = {
						is_operative = no

					#}
				}
				if = {
					limit = {
						has_unit_leader_race_trait = no
					}
					set_unit_leader_flag = generated
					if = {
						limit = {
							owner = { 
								original_tag = EYE 
							}
							NOT = {
								OR = {
									has_id = 77701
									has_id = 6901
									has_id = 59302
									has_id = 59306
									has_id = 59307
									has_id = 59308
									has_id = 59309
									has_id = 59310
									has_id = 59311
									has_id = 59312
									has_id = 59313
									has_id = 59312									
								}
							}
						}
						random_list = {
							34 = {}
							33 = {
								set_unit_leader_to_raider = yes
								add_unit_leader_trait = raider_commander
							}
							33 = {
								set_unit_leader_to_talon = yes
								add_unit_leader_trait = merc_commander
							}
						}
					}
				}
				clr_unit_leader_flag = generated
			}
		}
	}

	#used when puppeting in a peace conference
	#ROOT = nation being puppeted, FROM = overlord
	on_puppet = {
		effect = {
			if = {
				limit = {
					ROOT = {
						original_tag = CAL
					}
				}
				FROM = {
					country_event = {
						id = canterlot_ali.1
					}
				}
			}
			
			if = {
				limit = {
					OR = {
						ROOT = {
							original_tag = SHA
						}
						ROOT = {
							original_tag = NEV
						}
						ROOT = {
							original_tag = EYE
						}
						ROOT = {
							original_tag = FSR
						}
						ROOT = {
							original_tag = TEN
						}
						ROOT = {
							original_tag = MSR
						}
					}
				}
				load_focus_tree = gensettlers
			}
		}
	}

	#used when puppeting through the occupied territories menu during peace time (or when releasing from non-core but owned territory, f.e. Britain releasing Egypt)
	#ROOT = nation being released, FROM = overlord
	on_release_as_puppet = {
		effect = {
			if = {
				limit = {
					ROOT = {
						original_tag = CAL
					}
				}
				FROM = {
					country_event = {
						id = canterlot_ali.1
					}
				}
			}

			if = {
				limit = {
					OR = {
						ROOT = {
							original_tag = SHA
						}
						ROOT = {
							original_tag = NEV
						}
						ROOT = {
							original_tag = EYE
						}
						ROOT = {
							original_tag = FSR
						}
						ROOT = {
							original_tag = TEN
						}
						ROOT = {
							original_tag = MSR
						}
					}
				}
				load_focus_tree = gensettlers
			}
		}
	}

	# ROOT is capitulated country, FROM is winner
	on_capitulation = {
		effect = {
			log = "[GetDateText]: ROOT: [Root.GetName] FROM: [From.GetName] on_capitulation"
			if = {
				limit = {
					has_country_flag = has_mwy_chancellor_flag
				}
				clr_country_flag = has_mwy_chancellor_flag
				remove_opinion_modifier = {
                    target = MWY
                    modifier = sent_chancellor
                }
                MWY = { clr_country_flag = chancellor_improving_relations_flag }
            }
        }
	}

	on_monthly_MWY = {
		effect = {
			log = "[GetDateText]: ROOT: [Root.GetName] on_monthly_MWY"
			MWY_calc_all_laws_approval = yes
			MWY_calc_realm_poor_opinion = yes
			if = {
				limit = { NOT = { has_country_flag = MWY_no_levies_flag } }
				if = {
					limit = {
						check_variable = { mwy_grainlands_opinion = 1 }
						NOT = { has_country_flag = MWY_grainlands_minus_1_levy_flag }
					}
					subtract_from_variable = { mwy_grainlands_levy_var = 1 }
					set_country_flag = MWY_grainlands_minus_1_levy_flag
				}
				if = {
					limit = {
						check_variable = { mwy_grainlands_opinion > 1 }
						has_country_flag = MWY_grainlands_minus_1_levy_flag
					}
					add_to_variable = { mwy_grainlands_levy_var = 1 }
					clr_country_flag = MWY_grainlands_minus_1_levy_flag
				}

				if = {
					limit = {
						check_variable = { mwy_amethyst_opinion = 1 }
						NOT = { has_country_flag = MWY_amethyst_minus_1_levy_flag }
					}
					subtract_from_variable = { mwy_amethyst_levy_var = 1 }
					set_country_flag = MWY_amethyst_minus_1_levy_flag
				}
				if = {
					limit = {
						check_variable = { mwy_amethyst_opinion > 1 }
						has_country_flag = MWY_amethyst_minus_1_levy_flag
					}
					add_to_variable = { mwy_amethyst_levy_var = 1 }
					clr_country_flag = MWY_amethyst_minus_1_levy_flag
				}

				if = {
					limit = {
						check_variable = { mwy_radigator_opinion = 1 }
						NOT = { has_country_flag = MWY_radigator_minus_1_levy_flag }
					}
					subtract_from_variable = { mwy_radigator_levy_var = 1 }
					set_country_flag = MWY_radigator_minus_1_levy_flag
				}
				if = {
					limit = {
						check_variable = { mwy_radigator_opinion > 1 }
						has_country_flag = MWY_radigator_minus_1_levy_flag
					}
					add_to_variable = { mwy_radigator_levy_var = 1 }
					clr_country_flag = MWY_radigator_minus_1_levy_flag
				}

				if = {
					limit = {
						check_variable = { mwy_swampy_opinion = 1 }
						NOT = { has_country_flag = MWY_swampy_minus_1_levy_flag }
					}
					subtract_from_variable = { mwy_swampy_levy_var = 1 }
					set_country_flag = MWY_swampy_minus_1_levy_flag
				}
				if = {
					limit = {
						check_variable = { mwy_swampy_opinion > 1 }
						has_country_flag = MWY_swampy_minus_1_levy_flag
					}
					add_to_variable = { mwy_swampy_levy_var = 1 }
					clr_country_flag = MWY_swampy_minus_1_levy_flag
				}

				if = {
					limit = {
						check_variable = { mwy_peninsula_opinion = 1 }
						NOT = { has_country_flag = MWY_peninsula_minus_1_levy_flag }
					}
					subtract_from_variable = { mwy_peninsula_levy_var = 1 }
					set_country_flag = MWY_peninsula_minus_1_levy_flag
				}
				if = {
					limit = {
						check_variable = { mwy_peninsula_opinion > 1 }
						has_country_flag = MWY_peninsula_minus_1_levy_flag
					}
					add_to_variable = { mwy_peninsula_levy_var = 1 }
					clr_country_flag = MWY_peninsula_minus_1_levy_flag
				}

				if = {
					limit = {
						check_variable = { mwy_belle_opinion = 1 }
						NOT = { has_country_flag = MWY_belle_minus_1_levy_flag }
					}
					subtract_from_variable = { mwy_belle_levy_var = 1 }
					set_country_flag = MWY_belle_minus_1_levy_flag
				}
				if = {
					limit = {
						check_variable = { mwy_belle_opinion > 1 }
						has_country_flag = MWY_belle_minus_1_levy_flag
					}
					add_to_variable = { mwy_belle_levy_var = 1 }
					clr_country_flag = MWY_belle_minus_1_levy_flag
				}

				if = {
					limit = {
						check_variable = { mwy_maredia_opinion = 1 }
						NOT = { has_country_flag = MWY_maredia_minus_1_levy_flag }
					}
					subtract_from_variable = { mwy_maredia_levy_var = 1 }
					set_country_flag = MWY_maredia_minus_1_levy_flag
				}
				if = {
					limit = {
						check_variable = { mwy_maredia_opinion > 1 }
						has_country_flag = MWY_maredia_minus_1_levy_flag
					}
					add_to_variable = { mwy_maredia_levy_var = 1 }
					clr_country_flag = MWY_maredia_minus_1_levy_flag
				}



				if = {
					limit = {
						check_variable = { mwy_grainlands_opinion = 3 }
						NOT = { has_country_flag = MWY_grainlands_minus_1_levy_flag }
					}
					add_to_variable = { mwy_grainlands_levy_var = 1 }
					set_country_flag = MWY_grainlands_plus_1_levy_flag
				}
				if = {
					limit = {
						check_variable = { mwy_grainlands_opinion < 3 }
						has_country_flag = MWY_grainlands_plus_1_levy_flag
					}
					subtract_from_variable = { mwy_grainlands_levy_var = 1 }
					clr_country_flag = MWY_grainlands_plus_1_levy_flag
				}

				if = {
					limit = {
						check_variable = { mwy_amethyst_opinion = 3 }
						NOT = { has_country_flag = MWY_amethyst_plus_1_levy_flag }
					}
					add_to_variable = { mwy_amethyst_levy_var = 1 }
					set_country_flag = MWY_amethyst_plus_1_levy_flag
				}
				if = {
					limit = {
						check_variable = { mwy_amethyst_opinion < 3 }
						has_country_flag = MWY_amethyst_plus_1_levy_flag
					}
					subtract_from_variable = { mwy_amethyst_levy_var = 1 }
					clr_country_flag = MWY_amethyst_plus_1_levy_flag
				}

				if = {
					limit = {
						check_variable = { mwy_radigator_opinion = 3 }
						NOT = { has_country_flag = MWY_radigator_plus_1_levy_flag }
					}
					add_to_variable = { mwy_radigator_levy_var = 1 }
					set_country_flag = MWY_radigator_plus_1_levy_flag
				}
				if = {
					limit = {
						check_variable = { mwy_radigator_opinion < 3 }
						has_country_flag = MWY_radigator_plus_1_levy_flag
					}
					subtract_from_variable = { mwy_radigator_levy_var = 1 }
					clr_country_flag = MWY_radigator_plus_1_levy_flag
				}

				if = {
					limit = {
						check_variable = { mwy_swampy_opinion = 3 }
						NOT = { has_country_flag = MWY_swampy_plus_1_levy_flag }
					}
					add_to_variable = { mwy_swampy_levy_var = 1 }
					set_country_flag = MWY_swampy_plus_1_levy_flag
				}
				if = {
					limit = {
						check_variable = { mwy_swampy_opinion < 3 }
						has_country_flag = MWY_swampy_plus_1_levy_flag
					}
					subtract_from_variable = { mwy_swampy_levy_var = 1 }
					clr_country_flag = MWY_swampy_plus_1_levy_flag
				}

				if = {
					limit = {
						check_variable = { mwy_peninsula_opinion = 3 }
						NOT = { has_country_flag = MWY_peninsula_plus_1_levy_flag }
					}
					add_to_variable = { mwy_peninsula_levy_var = 1 }
					set_country_flag = MWY_peninsula_plus_1_levy_flag
				}
				if = {
					limit = {
						check_variable = { mwy_peninsula_opinion < 3 }
						has_country_flag = MWY_peninsula_plus_1_levy_flag
					}
					subtract_from_variable = { mwy_peninsula_levy_var = 1 }
					clr_country_flag = MWY_peninsula_plus_1_levy_flag
				}

				if = {
					limit = {
						check_variable = { mwy_belle_opinion = 3 }
						NOT = { has_country_flag = MWY_belle_plus_1_levy_flag }
					}
					add_to_variable = { mwy_belle_levy_var = 1 }
					set_country_flag = MWY_belle_plus_1_levy_flag
				}
				if = {
					limit = {
						check_variable = { mwy_belle_opinion < 3 }
						has_country_flag = MWY_belle_plus_1_levy_flag
					}
					subtract_from_variable = { mwy_belle_levy_var = 1 }
					clr_country_flag = MWY_belle_plus_1_levy_flag
				}

				if = {
					limit = {
						check_variable = { mwy_maredia_opinion = 3 }
						NOT = { has_country_flag = MWY_maredia_plus_1_levy_flag }
					}
					add_to_variable = { mwy_maredia_levy_var = 1 }
					set_country_flag = MWY_maredia_plus_1_levy_flag
				}
				if = {
					limit = {
						check_variable = { mwy_maredia_opinion < 3 }
						has_country_flag = MWY_maredia_plus_1_levy_flag
					}
					subtract_from_variable = { mwy_maredia_levy_var = 1 }
					clr_country_flag = MWY_maredia_plus_1_levy_flag
				}

				clamp_variable = {
					var = mwy_grainlands_levy_var
					min = 1
					max = 6
				}
				clamp_variable = {
					var = mwy_amethyst_levy_var
					min = 1
					max = 4
				}
				clamp_variable = {
					var = mwy_radigator_levy_var
					min = 1
					max = 3
				}
				clamp_variable = {
					var = mwy_swampy_levy_var
					min = 1
					max = 3
				}
				clamp_variable = {
					var = mwy_peninsula_levy_var
					min = 1
					max = 3
				}
				clamp_variable = {
					var = mwy_belle_levy_var
					min = 1
					max = 4
				}
				clamp_variable = {
					var = mwy_maredia_levy_var
					min = 1
					max = 5
				}
			}
		}
	}

	#FROM is war target
	on_declare_war = {
		effect = {
			if = {#MATO Mutual Defense
				limit = {
					has_global_flag = MATO_mutal_defense_flag
					FROM = {
						is_in_faction_with = MSR
						is_MATO_member = yes
						NOT = { original_tag = ROOT }
					}
				}
				log = "[GetDateText]: ROOT: [Root.GetName] FROM: [From.GetName] on_declare_war MATO Defense Pact"
				FROM = { save_event_target_as = defender }
				every_country = {
					limit = {
						NOT = { tag = FROM }
						is_in_faction_with = FROM
						is_subject = no
					}
					custom_effect_tooltip = MATO_defense_join_tt
					hidden_effect = {
						country_event = {
							id = MSR_steelhooves.15
							days = 1
						}
					}
				}
			}
		}
	}

	on_weekly_EYE = {
		effect = {
			log = "[GetDateText]: ROOT: [Root.GetName] on_weekly_EYE"
			if = {
				limit = {
					MSR = { check_variable = { MSR_EYE_unrest_var > 0 } }
					has_war_with = MSR
					MSR = { has_completed_focus = MSR_Ending_Red_Eyes_Reign }
					NOT = { country_exists = FFD }
				}
				if = {
					limit = { check_variable = { MSR_EYE_unrest_var = 1 } }
					random_list = {
						99.5 = {
						}
						0.5 = {
							country_event = MSR.134
						}
					}
				}
				else_if = {
					limit = { check_variable = { MSR_EYE_unrest_var = 2 } }
					random_list = {
						97 = {
						}
						3 = {
							country_event = MSR.134
						}
					}
				}
				else_if = {
					limit = { check_variable = { MSR_EYE_unrest_var = 3 } }
					random_list = {
						95 = {
						}
						5 = {
							country_event = MSR.134
						}
					}
				}
				else_if = {
					limit = { check_variable = { MSR_EYE_unrest_var = 4 } }
					random_list = {
						92 = {
						}
						8 = {
							country_event = MSR.134
						}
					}
				}
				else_if = {
					limit = { check_variable = { MSR_EYE_unrest_var = 5 } }
					random_list = {
						90 = {
						}
						10 = {
							country_event = MSR.134
						}
					}
				}
			}
		}
	}
}