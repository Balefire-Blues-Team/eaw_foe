@MAX_DISTANCE = 8000
update_country_distances = {
	if = {
		limit = { has_global_flag = distance_debug_logs }
		log = "Updating distances for [?THIS.GetTag]..."
	}
	every_country = {
		if = {
			limit = { has_global_flag = distance_debug_logs }
			log = "  Comparing [?PREV.GetTag] to [?THIS.GetTag]..."
		}
		set_temp_variable = { current_minimum = @MAX_DISTANCE }
		if = {
			limit = { has_global_flag = distance_debug_logs }
			log = "    Iterating over states belonging to [?PREV.GetName]..."
		}
		for_each_scope_loop = {
			array = PREV.controlled_states
			set_temp_variable = { global.state_a = THIS }
			if = {
				limit = { has_global_flag = distance_debug_logs }
				log = "    Iterating over states belonging to [?PREV.GetName]..."
			}
			for_each_scope_loop = {
				array =	PREV.controlled_states
				set_temp_variable = { global.state_b = THIS }
				set_temp_variable = { distance = distance_to@PREV }
				if = {
					limit = { state = PREV }
				}
				else = {
					if = {
						limit = { has_global_flag = distance_debug_logs }
						log = "    Distance between [?THIS.GetName] and [?PREV.GetName] = [?distance] ([?current_minimum])"
					}
					if = {
						limit = {
							check_variable = { distance < current_minimum }
						}
						if = {
							limit = { has_global_flag = distance_debug_logs }
							log = "    Updating minimum to [?distance]!"
						}
						set_temp_variable = { current_minimum = distance_to@PREV }
						set_temp_variable = { closest_state_a = global.state_a }
						set_temp_variable = { closest_state_b = global.state_b }
					}
				}
			}
		}
		if = {
			limit = { has_global_flag = distance_debug_logs }
			log = "    Smallest distance between [?PREV.GetTag] and [?THIS.GetTag] found was [?current_minimum]."
		}
		set_variable = { closest_distance_to@PREV = current_minimum }
		set_variable = { closest_state_to@PREV = closest_state_b }
		set_variable = { PREV.closest_distance_to@THIS = current_minimum }
		set_variable = { PREV.closest_state_to@THIS = closest_state_a }
	}
}

update_all_country_distances = {
	every_country = {
		every_country = {
			set_variable = { closest_distance_to@PREV = -1 }
		}
	}
	every_country = {
		if = {
			limit = { has_global_flag = distance_debug_logs }
			log = "Setting distances for [?THIS.GetTag]..."
		}
		every_country = {
			if = {
				limit = { has_global_flag = distance_debug_logs }
				log = "  Comparing [?PREV.GetTag] to [?THIS.GetTag]..."
			}
			if = {
				limit = { check_variable = { closest_distance_to@PREV > -1 } }
				if = {
					limit = { has_global_flag = distance_debug_logs }
					log = "    [?PREV.GetTag] distance to [?THIS.GetTag] already calculated, skipping..."
				}
			}
			else = {
				set_temp_variable = { current_minimum = @MAX_DISTANCE }
				if = {
					limit = { has_global_flag = distance_debug_logs }
					log = "    Iterating over states belonging to [?PREV.GetName]..."
				}
				for_each_scope_loop = {
					array = PREV.controlled_states
					set_temp_variable = { global.state_a = THIS }
					if = {
						limit = { has_global_flag = distance_debug_logs }
						log = "    Iterating over states belonging to [?PREV.GetName]..."
					}
					for_each_scope_loop = {
						array =	PREV.controlled_states
						set_temp_variable = { global.state_b = THIS }
						set_temp_variable = { distance = distance_to@PREV }
						if = {
							limit = { state = PREV }
						}
						else = {
							if = {
								limit = { has_global_flag = distance_debug_logs }
								log = "    Distance between [?THIS.GetName] and [?PREV.GetName] = [?distance] ([?current_minimum])"
							}
							if = {
								limit = {
									check_variable = { distance < current_minimum }
								}
								if = {
									limit = { has_global_flag = distance_debug_logs }
									log = "    Updating minimum to [?distance]!"
								}
								set_temp_variable = { current_minimum = distance_to@PREV }
								set_temp_variable = { closest_state_a = global.state_a }
								set_temp_variable = { closest_state_b = global.state_b }
							}
						}
					}
				}
				if = {
					limit = { has_global_flag = distance_debug_logs }
					log = "    Smallest distance between [?PREV.GetTag] and [?THIS.GetTag] found was [?current_minimum]."
				}
				set_variable = { closest_distance_to@PREV = current_minimum }
				set_variable = { closest_state_to@PREV = closest_state_b }
				set_variable = { PREV.closest_distance_to@THIS = current_minimum }
				set_variable = { PREV.closest_state_to@THIS = closest_state_a }
			}
		}
	}
}
# vim: set ft=pdx ts=2 sw=2 tw=79 :
