defined_text = {
	name = GetCanExodus

	text = {
		trigger = {
			NOT = { allow_exodus_from_THIS = yes }
		}
		localization_key = exodus_gui_disallow_exodus
	}
	text = {
		trigger = {
			OR = {
				NOT = { has_variable = ROOT.exodus_new_owner }
				NOT = { has_variable = ROOT.exodus_old_owner }
				NOT = { has_variable = ROOT.exodus_target_state }
				if = {
					limit = { has_variable = ROOT.exodus_target_state }
					NOT = { var:ROOT.exodus_target_state = { state = PREV.id } }
				}
			}
		}
		localization_key = exodus_gui_please_refreesh
	}
	text = {
		trigger = {
			var:ROOT.exodus_target_state = { state = PREV.id }
		}
		localization_key = exodus_gui_allow_exodus
	}
	text = { ## Back-up edge case
		trigger = {
			always = yes
		}
		localization_key = exodus_gui_error
	}
}

defined_text = {
	name = GetExodusTargets

	text = {
		trigger = {
			check_variable = { exodus_valid_targets_temp^num = 0 }
		}
		localization_key = "Empty"
	}
	text = {
		trigger = {
			set_temp_variable = { cur = -1 }
		}
		localization_key = "[GetExodusTargetsArrayTT]"
	}
}

defined_text = {
	name = GetExodusTargetsArrayTT

	text = {
		trigger = {
			add_to_temp_variable = { cur = 1 }
			check_variable = { exodus_valid_targets_temp^num > cur }
			check_variable = { cur < 11 }
			# var:caf_trade_partners^cur = {
			#     set_temp_variable = { entry_amount = caf_shipment_recieved_amount }
			# }
			set_temp_variable = { current_weight = current_scope_weight^cur }
		}
		localization_key = "exodus_array_entry_n"
	}
	text = {
		localization_key = ""
	}
}