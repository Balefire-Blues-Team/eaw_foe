# leader_traits contain a list of UnitLeaderTrait with the following structure:
# trait_key = {
# 	type = all # or either of field_marshal, corps_commander, navy
#	trait_type = basic_trait # or either of status_trait, personality_trait, assignable_trait, basic_terrain_trait, assignable_terrain_trait, exile
#	attack_skill = 0 # integer
#	defense_skill = 0 # integer
#	logistics_skill = 0 # integer
#	planning_skill = 0 # integer
#	maneuvering_skill = 0 # integer
#	coordination_skill = 0 # integer
#	attack_skill_factor = 0.0 # decimal
#	defense_skill_factor = 0.0 # decimal
#	logistics_skill_factor = 0.0 # decimal
#	planning_skill_factor = 0.0 # decimal
#	maneuvering_skill_factor = 0.0 # decimal
#	coordination_skill_factor = 0.0 # decimal
#	show_in_combat = yes # boolean
#	override_effect_tooltip = "" # loc key
#	custom_effect_tooltip = "" # loc key
#	custom_prerequisite_tooltip = "" # loc key
#	custom_gain_xp_trigger_tooltip = "" # loc key
#	mutually_exclusive = other_trait # trait key
#	parent = { # Can be added multiple times
#	    traits = {XXX YYY ZZZ}  # A list of other traits that
#       num_parents_needed = 1 # The number of the above traits that must be true
#   }
#   any_parent = { XXX YYY ZZZ } # shorthand for parent when num_parents_needed are defaulted to 1
#   all_parents = { XXX YYY ZZZ } # shorthand for parent when num_parents_needed are the same as the number of parents
#	gui_row = 0 # integer, starts at 0, unset or -1 means the trait does not appear in unlockable trait tree.
#	gui_column = 0 # integer, starts at 0, unset or -1 means auto
#	allowed = trigger # scope is a unit leader
#	prerequisites = trigger # scope is an unit leader
#	gain_xp = trigger # scope is a combatant
#	gain_xp_leader = trigger # scope is a unit leader. ROOT is country you are from and FROM is any target nationality for agents
#	gain_xp_on_spotting = 0 # integer
#	modifier = { } # list of modifiers
#	non_shared_modifier = {} #
#	corps_commander_modifier = {} #
#	field_marshal_modifier = {} #
#	sub_unit_modifiers = { # list of sub unit def
#		# e.g.
#		submarine {
#			units = {} # list of adjusters
#			# list of modifiers e.g.
#			naval_visibility = -0.1
#		}
#	}
#	trait_xp_factor = {} # list of trait_key/decimal
#	on_add = effect # scope is an unit leader
#	on_remove = effect # scope is an unit leader
#	daily_effect = effect # scope is an unit leader
#	cost = 1000 # integer
#	ai_will_do = {} # weight
#	new_commander_weight = {} # weight
#	enable_ability = ability_key
#}



leader_traits = {

	##################################
	# perks and special stats
	##################################
	
		strong_trait = {
			type = corps_commander
			# gain_xp = {
			# 	always = no
			# }
	
			new_commander_weight = {
				factor = 0
			}
	
			modifier = {
				offence = 0.025
				defence = 0.025
			}
	
			ai_will_do = {
				factor = 1
			}
	
			trait_type = basic_trait
			gui_row = 1
		}
	
		rooted_trait = {
			type = corps_commander
			# gain_xp = {
			# 	always = no
			# }
	
			modifier = {
				max_dig_in = 2
				dig_in_speed_factor = 0.2
			}
	
			ai_will_do = {
				factor = 1
			}
	
			trait_type = assignable_trait
			#any_parent = { strong_trait }
			mutually_exclusive = pain_train_trait
			mutually_exclusive = strong_back_trait
			gui_row = 0
		}
	
		pain_train_trait = {
			type = corps_commander
			# gain_xp = {
			# 	always = no
			# }
	
			modifier = {
				modifier_army_sub_unit_category_power_armour_attack_factor = 0.10
				modifier_army_sub_unit_category_power_armour_speed_factor = 0.10
			}
	
			ai_will_do = {
				factor = 1
			}
	
			trait_type = assignable_trait
			#any_parent = { strong_trait }
			mutually_exclusive = rooted_trait
			mutually_exclusive = strong_back_trait
			gui_row = 1
		}
	
		strong_back_trait = {
			type = corps_commander
			# gain_xp = {
			# 	always = no
			# }
	
			modifier = {
				out_of_supply_factor = -0.2
				modifier_army_sub_unit_super_mutant_infantry_attack_factor = 0.1
			}
	
			ai_will_do = {
				factor = 1
			}
	
			trait_type = assignable_trait
			mutually_exclusive = rooted_trait
			mutually_exclusive = pain_train_trait
			#any_parent = { strong_trait }
			gui_row = 2
		}
	
		perceptive_trait = {
			type = corps_commander
			# gain_xp = {
			# 	always = no
			# }
	
			new_commander_weight = {
				factor = 0
			}
	
			modifier = {
				offence = 0.025
				defence = 0.025
			}
	
			ai_will_do = {
				factor = 1
			}
	
			gui_row = 4
		}
	
		awareness_trait = {
			type = corps_commander
			# gain_xp = {
			# 	always = no
			# }
	
			modifier = {
				recon_factor = 1
				wounded_chance_factor = -0.2
			}
	
			ai_will_do = {
				factor = 1
			}
	
			trait_type = assignable_trait
			#any_parent = { perceptive_trait }
			mutually_exclusive = sniper_trait
			mutually_exclusive = night_person_trait
			gui_row = 3
		}
	
		sniper_trait = {
			type = corps_commander
			# gain_xp = {
			# 	always = no
			# }
	
			modifier = {
				modifier_army_sub_unit_category_light_special_forces_attack_factor = 0.1
				modifier_army_sub_unit_category_light_special_forces_defence_factor = 0.1
			}
	
			ai_will_do = {
				factor = 1
			}
	
			trait_type = assignable_trait
			#any_parent = { perceptive_trait }
			mutually_exclusive = awareness_trait
			mutually_exclusive = night_person_trait
			gui_row = 4
		}
	
		night_person_trait = {
			type = corps_commander
			# gain_xp = {
			# 	always = no
			# }
	
			modifier = {
				cas_damage_reduction = 0.2
				modifier_army_sub_unit_super_mutant_nightkin_infantry_attack_factor = 0.05
				modifier_army_sub_unit_super_mutant_nightkin_infantry_defence_factor = 0.05
			}
	
			ai_will_do = {
				factor = 1
			}
	
			trait_type = assignable_trait
			#any_parent = { perceptive_trait }
			mutually_exclusive = awareness_trait
			mutually_exclusive = sniper_trait
			gui_row = 5
		}
	
		enduring_trait = {
			type = corps_commander
			# gain_xp = {
			# 	always = no
			# }
	
			new_commander_weight = {
				factor = 0
			}
	
			modifier = {
				wounded_chance_factor = -0.3
				sickness_chance = -0.5
			}
	
			ai_will_do = {
				factor = 1
			}
	
			gui_row = 7
		}
	
		survivalist_trait = {
			type = corps_commander
			# gain_xp = {
			# 	always = no
			# }
	
			modifier = {
				acclimatization_hot_climate_gain_factor = 0.5
				acclimatization_cold_climate_gain_factor = 0.5
				winter_attrition_factor = -0.1
				heat_attrition_factor = -0.1
			}
	
			ai_will_do = {
				factor = 1
			}
	
			trait_type = assignable_trait
			#any_parent = { enduring_trait }
			mutually_exclusive = life_giver_trait
			mutually_exclusive = aqua_boy_trait
			gui_row = 6
		}
	
		life_giver_trait = {
			type = corps_commander
			# gain_xp = {
			# 	always = no
			# }
	
			modifier = {
				army_morale_factor = 0.1
			}
	
			ai_will_do = {
				factor = 1
			}
	
			trait_type = assignable_trait
			#any_parent = { enduring_trait }
			mutually_exclusive = survivalist_trait
			mutually_exclusive = aqua_boy_trait
			gui_row = 7
		}
	
		aqua_boy_trait = {
			type = corps_commander
			# gain_xp = {
			# 	always = no
			# }
	
			modifier = {
				amphibious_invasion = 0.2
				naval_invasion_penalty = -0.2
				invasion_preparation = -0.2
			}
	
			ai_will_do = {
				factor = 1
			}
	
			trait_type = assignable_trait
			#any_parent = { enduring_trait }
			mutually_exclusive = survivalist_trait
			mutually_exclusive = life_giver_trait
			gui_row = 8
		}
	
		charismatic_trait = {
			type = corps_commander
			# gain_xp = {
			# 	always = no
			# }
	
			new_commander_weight = {
				factor = 0
			}
	
			modifier = {
				army_morale_factor = 0.05
			}
	
			ai_will_do = {
				factor = 1
			}
	
			gui_row = 10
		}
	
		local_leader_trait = {
			type = corps_commander
			# gain_xp = {
			# 	always = no
			# }
	
			modifier = {
				max_commander_army_size = 6
			}
	
			ai_will_do = {
				factor = 1
			}
	
			trait_type = assignable_trait
			#any_parent = { charismatic_trait }
			mutually_exclusive = animal_friend_trait
			mutually_exclusive = inspirational_trait
			gui_row = 9
		}
	
		animal_friend_trait = {
			type = corps_commander
			# gain_xp = {
			# 	always = no
			# }
	
			modifier = {
				modifier_army_sub_unit_dog_company_attack_factor = 0.2
				modifier_army_sub_unit_dog_company_defence_factor = 0.2
				modifier_army_sub_unit_dog_infantry_attack_factor = 0.1
				modifier_army_sub_unit_dog_infantry_defence_factor = 0.1
				modifier_army_sub_unit_dog_infantry_speed_factor = 0.05
				modifier_army_sub_unit_category_super_mutant_infantry_defence_factor = 0.1
			}
	
			ai_will_do = {
				factor = 1
			}
	
			trait_type = assignable_trait
			#any_parent = { charismatic_trait }
			mutually_exclusive = local_leader_trait
			mutually_exclusive = inspirational_trait
			gui_row = 10
		}
	
		inspirational_trait = {
			type = corps_commander
			# gain_xp = {
			# 	always = no
			# }
	
			modifier = {
				experience_gain_factor = 0.2
			}
	
			ai_will_do = {
				factor = 1
			}
	
			trait_type = assignable_trait
			#any_parent = { charismatic_trait }
			mutually_exclusive = local_leader_trait
			mutually_exclusive = animal_friend_trait
			gui_row = 11
		}
	
		intelligent_trait = {
			type = corps_commander
			# gain_xp = {
			# 	always = no
			# }
	
			new_commander_weight = {
				factor = 0
			}
	
			modifier = {
				experience_gain_factor = 0.1
			}
	
			ai_will_do = {
				factor = 1
			}
	
			gui_row = 13
		}
	
		gun_nut_trait = {
			type = corps_commander
			# gain_xp = {
			# 	always = no
			# }
	
			modifier = {
				modifier_army_sub_unit_fireteam_support_attack_factor = 0.1
				modifier_army_sub_unit_fireteam_support_defence_factor = 0.1
				modifier_army_sub_unit_fireteam_infantry_attack_factor = 0.1
				modifier_army_sub_unit_fireteam_infantry_defence_factor = 0.1
				modifier_army_sub_unit_motorized_fireteam_attack_factor = 0.1
				modifier_army_sub_unit_motorized_fireteam_defence_factor = 0.1
			}
	
			ai_will_do = {
				factor = 1
			}
	
			trait_type = assignable_trait
			#any_parent = { intelligent_trait }
			mutually_exclusive = robotics_expert_trait
			mutually_exclusive = nerd_rage_trait
			gui_row = 12
		}
	
		robotics_expert_trait = {
			type = corps_commander
			# gain_xp = {
			# 	always = no
			# }
	
			modifier = {
				modifier_army_sub_unit_category_front_line_robots_attack_factor = 0.1
				modifier_army_sub_unit_category_front_line_robots_defence_factor = 0.1
			}
	
			ai_will_do = {
				factor = 1
			}
	
			trait_type = assignable_trait
			#any_parent = { intelligent_trait }
			mutually_exclusive = gun_nut_trait
			mutually_exclusive = nerd_rage_trait
			gui_row = 13
		}
	
		nerd_rage_trait = {
			type = corps_commander
			# gain_xp = {
			# 	always = no
			# }
	
			modifier = {
				modifier_army_sub_unit_heavy_infantry_attack_factor = 0.1
				modifier_army_sub_unit_heavy_infantry_speed_factor = 0.1
				modifier_army_sub_unit_motorized_heavy_infantry_attack_factor = 0.1
				modifier_army_sub_unit_motorized_heavy_infantry_speed_factor = 0.1
			}
	
			ai_will_do = {
				factor = 1
			}
	
			trait_type = assignable_trait
			#any_parent = { intelligent_trait }
			mutually_exclusive = robotics_expert_trait
			mutually_exclusive = gun_nut_trait
			gui_row = 14
		}
	
		agile_trait = {
			type = corps_commander
			# gain_xp = {
			# 	always = no
			# }
	
			new_commander_weight = {
				factor = 0
			}
	
			modifier = {
				desert = {
					movement = 0.05
				}
				hills = {
					movement = 0.05
				}
				forest = {
					movement = 0.05
				}
				mountain = {
					movement = 0.05
				}
				plains = {
					movement = 0.05
				}
				urban = {
					movement = 0.05
				}
				jungle = {
					movement = 0.05
				}
				marsh = {
					movement = 0.05
				}
				radiation = {
					movement = 0.05
				}
			}
	
			override_effect_tooltip = agile_movement_bonus_on_land_tt
	
			ai_will_do = {
				factor = 1
			}
	
			gui_row = 16
		}
	
		gunslinger_trait = {
			type = corps_commander
			# gain_xp = {
			# 	always = no
			# }
	
			modifier = {
				modifier_army_sub_unit_militia_attack_factor = 0.1
				modifier_army_sub_unit_militia_defence_factor = 0.1
				modifier_army_sub_unit_police_infantry_attack_factor = 0.1
				modifier_army_sub_unit_police_infantry_defence_factor = 0.1
			}
	
			ai_will_do = {
				factor = 1
			}
	
			trait_type = assignable_trait
			#any_parent = { agile_trait }
			mutually_exclusive = lead_foot_trait
			mutually_exclusive = ninja_trait
			gui_row = 15
		}
	
		lead_foot_trait = {
			type = corps_commander
			# gain_xp = {
			# 	always = no
			# }
	
			modifier = {
				org_loss_when_moving = -0.15
				modifier_army_sub_unit_motorized_attack_factor = 0.05
				modifier_army_sub_unit_motorized_defence_factor = 0.05
				modifier_army_sub_unit_chariot_attack_factor = 0.05
				modifier_army_sub_unit_chariot_defence_factor = 0.05
			}
	
			ai_will_do = {
				factor = 1
			}
	
			trait_type = assignable_trait
			#any_parent = { agile_trait }
			mutually_exclusive = gunslinger_trait
			mutually_exclusive = ninja_trait
			gui_row = 16
		}
	
		ninja_trait = {
			type = corps_commander
			# gain_xp = {
			# 	always = no
			# }
	
			modifier = {
				land_reinforce_rate = 0.02
				modifier_army_sub_unit_super_mutant_nightkin_infantry_attack_factor = 0.05
				modifier_army_sub_unit_super_mutant_nightkin_infantry_defence_factor = 0.05
			}
	
			ai_will_do = {
				factor = 1
			}
	
			trait_type = assignable_trait
			#any_parent = { agile_trait }
			mutually_exclusive = lead_foot_trait
			mutually_exclusive = gunslinger_trait
			gui_row = 17
		}
	
		lucky_trait = {
			type = corps_commander
			# gain_xp = {
			# 	always = no
			# }
	
			new_commander_weight = {
				factor = 0
			}
	
			modifier = {
				planning_speed = 0.1
			}
	
			ai_will_do = {
				factor = 1
			}
	
			gui_row = 19
		}
	
		idiot_savant_trait = {
			type = corps_commander
			# gain_xp = {
			# 	always = no
			# }
	
			modifier = {
				equipment_capture = 0.05
				supply_consumption_factor = -0.1
			}
	
			ai_will_do = {
				factor = 1
			}
	
			trait_type = assignable_trait
			#any_parent = { lucky_trait }
			mutually_exclusive = mysterious_stranger_trait
			mutually_exclusive = bloody_mess_trait
			gui_row = 18
		}
	
		mysterious_stranger_trait = {
			type = corps_commander
			# gain_xp = {
			# 	always = no
			# }
	
			modifier = {
				modifier_army_sub_unit_infantry_attack_factor = 0.1
				modifier_army_sub_unit_infantry_defence_factor = 0.1
				modifier_army_sub_unit_ghoul_infantry_attack_factor = 0.1
				modifier_army_sub_unit_ghoul_infantry_defence_factor = 0.1
			}
	
			ai_will_do = {
				factor = 1
			}
	
			trait_type = assignable_trait
			#any_parent = { lucky_trait }
			mutually_exclusive = idiot_savant_trait
			mutually_exclusive = bloody_mess_trait
			gui_row = 19
		}
	
		bloody_mess_trait = {
			type = corps_commander
			# gain_xp = {
			# 	always = no
			# }
	
			modifier = {
				modifier_army_sub_unit_demolitions_support_attack_factor = 0.1
				modifier_army_sub_unit_demolitions_support_defence_factor = 0.1
				modifier_army_sub_unit_demolitions_infantry_attack_factor = 0.1
				modifier_army_sub_unit_demolitions_infantry_defence_factor = 0.1
				modifier_army_sub_unit_motorized_demoteam_attack_factor = 0.1
				modifier_army_sub_unit_motorized_demoteam_defence_factor = 0.1
			}
	
			ai_will_do = {
				factor = 1
			}
	
			trait_type = assignable_trait
			#any_parent = { lucky_trait }
			mutually_exclusive = mysterious_stranger_trait
			mutually_exclusive = idiot_savant_trait
			gui_row = 20
		}
	
		##################################
		# Field Marshall Traits with special
		##################################
	
		savage_leader_trait = {
			type = field_marshal
			# gain_xp = {
			# 	always = no
			# }
	
			field_marshal_modifier = {
				breakthrough_factor = 0.1
			}
	
			ai_will_do = {
				factor = 1
			}
			gui_row = 1
			trait_type = assignable_trait
	
			any_parent = {
				pain_train_trait
				strong_back_trait
				rooted_trait
			}
	
		}
	
		observant_leader_trait = {
			type = field_marshal
			# gain_xp = {
			# 	always = no
			# }
	
			field_marshal_modifier = {
				org_loss_when_moving = -0.15
			}
	
			ai_will_do = {
				factor = 1
			}
			gui_row = 4
			trait_type = assignable_trait
	
			any_parent = {
				awareness_trait
				sniper_trait
				night_person_trait
			}
		}
	
		tough_leader_trait = {
			type = field_marshal
			# gain_xp = {
			# 	always = no
			# }
	
			field_marshal_modifier = {
				army_defence_factor = 0.075
			}
	
			ai_will_do = {
				factor = 1
			}
			gui_row = 7
			trait_type = assignable_trait
	
			any_parent = {
				survivalist_trait
				aqua_boy_trait
				life_giver_trait
			}
		}
	
		loved_leader_trait = {
			type = field_marshal
			# gain_xp = {
			# 	always = no
			# }
	
			field_marshal_modifier = {
				army_morale_factor = 0.1
			}
	
			ai_will_do = {
				factor = 1
			}
			gui_row = 10
			trait_type = assignable_trait
	
			any_parent = {
				local_leader_trait
				animal_friend_trait
				inspirational_trait
			}
		}
	
		cunning_leader_trait = {
			type = field_marshal
			# gain_xp = {
			# 	always = no
			# }
	
			field_marshal_modifier = {
				max_planning = 0.1
			}
	
			ai_will_do = {
				factor = 1
			}
			gui_row = 13
			trait_type = assignable_trait
	
			any_parent = {
				gun_nut_trait
				robotics_expert_trait
				nerd_rage_trait
			}
		}
	
		nimble_leader_trait = {
			type = field_marshal
			# gain_xp = {
			# 	always = no
			# }
	
			field_marshal_modifier = {
				desert = {
					movement = 0.1
				}
				hills = {
					movement = 0.1
				}
				forest = {
					movement = 0.1
				}
				mountain = {
					movement = 0.1
				}
				plains = {
					movement = 0.1
				}
				urban = {
					movement = 0.1
				}
				jungle = {
					movement = 0.1
				}
				marsh = {
					movement = 0.1
				}
				radiation = {
					movement = 0.1
				}
			}
	
			override_effect_tooltip = expert_improviser_movement_bonus_on_land
	
			ai_will_do = {
				factor = 1
			}
			gui_row = 16
			trait_type = assignable_trait
	
			any_parent = {
				lead_foot_trait
				gunslinger_trait
				ninja_trait
			}
		}
	
		fortunate_leader_trait = {
			type = field_marshal
			# gain_xp = {
			# 	always = no
			# }
	
			field_marshal_modifier = {
				supply_consumption_factor = -0.1
			}
	
			ai_will_do = {
				factor = 1
			}
			gui_row = 19
			trait_type = assignable_trait
	
			any_parent = {
				idiot_savant_trait
				mysterious_stranger_trait
				bloody_mess_trait
			}
		}
	
	
		##################################
		# Field Marshall without special
		##################################
	
		flexible_trait = {
			type = field_marshal
			# gain_xp = {
			# 	always = no
			# }
	
			field_marshal_modifier = {
				planning_speed = 0.2
			}
	
			ai_will_do = {
				factor = 1
			}
			gui_row = 2
			mutually_exclusive = negotiator_trait
			trait_type = assignable_trait
		}
	
	
		negotiator_trait = {
			type = field_marshal
			# gain_xp = {
			# 	always = no
			# }
	
			field_marshal_modifier = {
				max_planning = 0.075
			}
	
			ai_will_do = {
				factor = 1
			}
			gui_row = 3
			mutually_exclusive = flexible_trait
			trait_type = assignable_trait
		}
	
		cult_of_personality_trait = {
			type = field_marshal
			# gain_xp = {
			# 	always = no
			# }
	
			field_marshal_modifier = {
				max_army_group_size = 3
			}
	
			modifier = {
				max_commander_army_size = 6
			}
	
			ai_will_do = {
				factor = 1
			}
			gui_row = 5
			mutually_exclusive = smooth_talker_trait
			trait_type = assignable_trait
		}
	
		smooth_talker_trait = {
			type = field_marshal
			# gain_xp = {
			# 	always = no
			# }
	
			field_marshal_modifier = {
				land_reinforce_rate = 0.025
			}
	
			ai_will_do = {
				factor = 1
			}
			gui_row = 6
			mutually_exclusive = cult_of_personality_trait
			trait_type = assignable_trait
		}
	
		ferocious_loyalty_trait = {
			type = field_marshal
			# gain_xp = {
			# 	always = no
			# }
	
			field_marshal_modifier = {
				max_army_group_size = 3
			}
	
			modifier = {
				max_commander_army_size = 6
			}
	
			ai_will_do = {
				factor = 1
			}
			gui_row = 8
			trait_type = assignable_trait
		}
	
		vigilant_recycler_trait = {
			type = field_marshal
			# gain_xp = {
			# 	always = no
			# }
	
			field_marshal_modifier = {
				out_of_supply_factor = -0.25
				no_supply_grace = 48
			}
	
			ai_will_do = {
				factor = 1
			}
			gui_row = 9
			trait_type = assignable_trait
		}
	
		junk_rounds_trait = {
			type = field_marshal
			# gain_xp = {
			# 	always = no
			# }
	
			field_marshal_modifier = {
				equipment_capture = 0.05
			}
	
			ai_will_do = {
				factor = 1
			}
			gui_row = 11
			mutually_exclusive = melee_hacker_trait
			trait_type = assignable_trait
		}
	
		melee_hacker_trait = {
			type = field_marshal
			# gain_xp = {
			# 	always = no
			# }
	
			field_marshal_modifier = {
				army_attack_factor = 0.05
			}
	
			ai_will_do = {
				factor = 1
			}
			gui_row = 12
			mutually_exclusive = junk_rounds_trait
			trait_type = assignable_trait
		}
	
		light_touch_trait = {
			type = field_marshal
			# gain_xp = {
			# 	always = no
			# }
	
			field_marshal_modifier = {
				modifier_army_sub_unit_infantry_attack_factor = 0.05
				modifier_army_sub_unit_infantry_defence_factor = 0.05
				modifier_army_sub_unit_ghoul_infantry_attack_factor = 0.05
				modifier_army_sub_unit_ghoul_infantry_defence_factor = 0.05
			}
	
			ai_will_do = {
				factor = 1
			}
			gui_row = 14
			mutually_exclusive = heavyweight_trait
			trait_type = assignable_trait
		}
	
	
		heavyweight_trait = {
			type = field_marshal
			# gain_xp = {
			# 	always = no
			# }
	
			field_marshal_modifier = {
				modifier_army_sub_unit_tank_attack_factor = 0.15
				modifier_army_sub_unit_tank_defence_factor = 0.15
				modifier_army_sub_unit_behemoth_attack_factor = 0.1
				modifier_army_sub_unit_behemoth_defence_factor = 0.1
			}
	
			ai_will_do = {
				factor = 1
			}
			gui_row = 15
			mutually_exclusive = light_touch_trait
			trait_type = assignable_trait
		}
	
		fight_the_power_trait = {
			type = field_marshal
			# gain_xp = {
			# 	always = no
			# }
	
			field_marshal_modifier = {
				army_core_attack_factor = 0.05
				army_core_defence_factor = 0.05
			}
	
			ai_will_do = {
				factor = 1
			}
			gui_row = 17
			mutually_exclusive = sneering_imperialist_trait
			trait_type = assignable_trait
		}
	
		sneering_imperialist_trait = {
			type = field_marshal
			# gain_xp = {
			# 	always = no
			# }
	
			field_marshal_modifier = {
				terrain_penalty_reduction = 0.15
			}
	
			ai_will_do = {
				factor = 1
			}
			gui_row = 18
			mutually_exclusive = fight_the_power_trait
			trait_type = assignable_trait
		}
	
		##################################
		# flavour traits
		##################################
	
		#	Stubborn_trait = {
		#		type = corps_commander
		#
		#		modifier = {
		#			experience_gain_factor = -0.25
		#		}
		#
		#		ai_will_do = {
		#			factor = 1
		#		}
		#
		#		gui_row = 21
		#		trait_type = basic_trait
		#	}
		#
		#	nerves_of_steel_trait = {
		#		type = field_marshal
		#
		#		gain_xp = {
		#			always = yes
		#		}
		#
		#		cost = 3000
		#		modifier = {
		#			army_defence_factor = 0.1
		#			experience_gain_factor = 0.25
		#		}
		#
		#		ai_will_do = {
		#			factor = 1
		#		}
		#
		#		gui_row = 21
		#		any_parent = { Stubborn_trait }
		#	}
	
		#	here_and_now_trait = {
		#		type = corps_commander
		#
		#		modifier = {
		#			max_planning = -0.25
		#		}
		#
		#		ai_will_do = {
		#			factor = 1
		#		}
		#
		#		gui_row = 22
		#		trait_type = basic_trait
		#	}
	
		#	eye_for_eye_trait = {
		#		type = field_marshal
		#		gain_xp = {
		#			always = yes
		#		}
		#
		#		cost = 3000
		#		modifier = {
		#			max_planning = 0.25
		#			offence = 0.05
		#			defence = 0.05
		#		}
		#
		#		ai_will_do = {
		#			factor = 1
		#		}
		#
		#		gui_row = 22
		#		any_parent = { here_and_now_trait }
		#	}
	
		##################################
		# terrain traits
		##################################
		desert_fox = {
			type = corps_commander
			gain_xp = {
				is_fighting_in_terrain = desert
			}
			cost = 700
			modifier = {
				desert = {
					attack = 0.1
					defence = 0.1
				}
			}
	
			ai_will_do = {
				factor = 1
			}
			trait_type = basic_terrain_trait
			gui_row = 0
		}
	
		desert_fox_II = {
			type = corps_commander
	
			# gain_xp = {
			# 	always = no # not gainable
			# }
	
			modifier = {
				desert = {
					attack = 0.1
					defence = 0.1
				}
			}
	
			ai_will_do = {
				factor = 1
			}
	
			any_parent = { desert_fox }
			trait_type = assignable_terrain_trait
			gui_row = 0
		}
	
		swamp_fox = {
			type = corps_commander
			gain_xp = {
				is_fighting_in_terrain = marsh
			}
			cost = 700
			modifier = {
				marsh = {
					attack = 0.1
					defence = 0.1
				}
			}
	
			ai_will_do = {
				factor = 1
			}
			trait_type = basic_terrain_trait
			gui_row = 1
		}
	
		swamp_fox_II = {
			type = corps_commander
			# gain_xp = {
			# 	always = no # not gainable
			# }
	
			modifier = {
				marsh = {
					attack = 0.1
					defence = 0.1
				}
			}
	
			ai_will_do = {
				factor = 1
			}
	
			any_parent = { swamp_fox }
			trait_type = assignable_terrain_trait
			gui_row = 1
		}
	
		hill_fighter = {
			type = corps_commander
			gain_xp = {
				is_fighting_in_terrain = hills
			}
			cost = 700
			modifier = {
				hills = {
					attack = 0.1
					defence = 0.1
				}
			}
	
			ai_will_do = {
				factor = 1
			}
			trait_type = basic_terrain_trait
			gui_row = 2
		}
	
		hill_fighter_II = {
			type = corps_commander
			# gain_xp = {
			# 	always = no # not gainable
			# }
	
			modifier = {
				hills = {
					attack = 0.1
					defence = 0.1
				}
			}
	
			ai_will_do = {
				factor = 1
			}
	
			any_parent = { hill_fighter }
			trait_type = assignable_terrain_trait
			gui_row = 2
		}
	
		trait_mountaineer = {
			type = corps_commander
			gain_xp = {
				is_fighting_in_terrain = mountain
			}
			cost = 700
			modifier = {
				mountain = {
					attack = 0.1
					defence = 0.1
				}
			}
	
			ai_will_do = {
				factor = 1
			}
			trait_type = basic_terrain_trait
			gui_row = 3
		}
	
		trait_mountaineer_II = {
			type = corps_commander
			# gain_xp = {
			# 	always = no # not gainable
			# }
	
			modifier = {
				mountain = {
					attack = 0.1
					defence = 0.1
				}
			}
	
			ai_will_do = {
				factor = 1
			}
	
			any_parent = { trait_mountaineer }
			trait_type = assignable_terrain_trait
			gui_row = 3
		}
	
		urban_assault_specialist = {
			type = corps_commander
			gain_xp = {
				is_fighting_in_terrain = urban
			}
			cost = 500
			modifier = {
				urban = {
					attack = 0.1
					defence = 0.1
				}
			}
	
			ai_will_do = {
				factor = 1
			}
			trait_type = basic_terrain_trait
			gui_row = 4
		}
	
		urban_assault_specialist_II = {
			type = corps_commander
			# gain_xp = {
			# 	always = no # not gainable
			# }
	
			modifier = {
				urban = {
					attack = 0.1
					defence = 0.1
				}
			}
	
			ai_will_do = {
				factor = 1
			}
	
			any_parent = { urban_assault_specialist }
			trait_type = assignable_terrain_trait
			gui_row = 4
		}
	
		ranger = {
			type = corps_commander
			gain_xp = {
				is_fighting_in_terrain = forest
			}
			cost = 700
			modifier = {
				forest = {
					attack = 0.1
					defence = 0.1
				}
			}
	
			ai_will_do = {
				factor = 1
			}
			trait_type = basic_terrain_trait
			gui_row = 5
		}
	
		ranger_II = {
			type = corps_commander
			# gain_xp = {
			# 	always = no # not gainable
			# }
	
			modifier = {
				forest = {
					attack = 0.1
					defence = 0.1
				}
			}
	
			ai_will_do = {
				factor = 1
			}
	
			any_parent = { ranger }
			trait_type = assignable_terrain_trait
			gui_row = 5
		}
	
		jungle_rat = {
			type = corps_commander
			gain_xp = {
				is_fighting_in_terrain = jungle
			}
			cost = 700
			modifier = {
				jungle = {
					attack = 0.1
					defence = 0.1
				}
			}
	
			ai_will_do = {
				factor = 1
			}
			trait_type = basic_terrain_trait
			gui_row = 6
		}
	
		jungle_rat_II = {
			type = corps_commander
			# gain_xp = {
			# 	always = no # not gainable
			# }
	
			modifier = {
				jungle = {
					attack = 0.1
					defence = 0.1
				}
			}
	
			ai_will_do = {
				factor = 1
			}
	
			any_parent = { jungle_rat }
			trait_type = assignable_terrain_trait
			gui_row = 6
		}
	
		winter_specialist = {
			type = corps_commander
			gain_xp = {
				temperature < -10
			}
			cost = 500
	
			modifier = {
				winter_attrition_factor = -0.5
			}
	
			ai_will_do = {
				factor = 1
			}
	
			trait_type = basic_terrain_trait
			gui_row = 7
		}
	
		winter_specialist_II = {
			type = corps_commander
			# gain_xp = {
			# 	always = no # not gainable
			# }
	
			modifier = {
				acclimatization_cold_climate_gain_factor = 0.5
			}
	
			ai_will_do = {
				factor = 1
			}
	
			any_parent = { winter_specialist }
			trait_type = assignable_terrain_trait
			gui_row = 7
		}
	
		rad_rat = {
			type = corps_commander
			gain_xp = {
				is_fighting_in_terrain = radiation
			}
			cost = 700
			modifier = {
				radiation = {
					attack = 0.1
					defence = 0.1
				}
			}
	
			ai_will_do = {
				factor = 1
			}
			trait_type = basic_terrain_trait
			gui_row = 8
		}
	
		rad_rat_II = {
			type = corps_commander
			# gain_xp = {
			# 	always = no # not gainable
			# }
	
			modifier = {
				radiation = {
					attack = 0.1
					defence = 0.1
				}
			}
	
			ai_will_do = {
				factor = 1
			}
	
			any_parent = { rad_rat }
			trait_type = assignable_terrain_trait
			gui_row = 8
		}
	
		fortress_buster = {
			type = corps_commander
			gain_xp = {
				has_combat_modifier = fort_attack
			}
			cost = 500
			modifier = {
				fort = {
					attack = 0.15
				}
			}
			enable_ability = siege_artillery
			ai_will_do = {
				factor = 1
			}
			trait_type = basic_terrain_trait
			gui_row = 9
		}
	
		skirmisher = {
			type = corps_commander
			modifier = {
				fortification_collateral_chance = 0.05
				fortification_damage = 0.05
			}
			ai_will_do = {
				factor = 1
			}
			enable_ability = probing_attack
			trait_type = assignable_terrain_trait
			any_parent = { fortress_buster }
			gui_row = 9
		}
	
		paratrooper = {
			type = corps_commander
			gain_xp = {
				has_combat_modifier = paradrop
			}
			cost = 350
			modifier = {
				extra_paratrooper_supply_grace = 120
			}
	
			enable_ability = glider_planes
	
			ai_will_do = {
				factor = 1
			}
	
			trait_type = basic_terrain_trait
			gui_row = 10
		}
	
		air_force_liaison = {
			type = corps_commander
	
			modifier = {
				air_superiority_bonus_in_combat = 0.1
			}
			ai_will_do = {
				factor = 1
			}
			gui_row = 10
			trait_type = assignable_terrain_trait
			any_parent = { paratrooper }
		}
	
		naval_invader = {
			type = corps_commander
			gain_xp = {
				is_amphibious_invasion = yes
			}
			cost = 250
			modifier = {
				amphibious_invasion = 0.3 # 30% faster invasions
				naval_invasion_penalty = -0.1
				invasion_preparation = -0.3
			}
	
			ai_will_do = {
				factor = 1
			}
			trait_type = basic_terrain_trait
			gui_row = 11
		}
	
		invader_ii = {
			type = corps_commander
			modifier = {
				extra_marine_supply_grace = 120
			}
	
			enable_ability = faster_naval_invasion_planning
	
			ai_will_do = {
				factor = 1
			}
	
			trait_type = assignable_terrain_trait
			any_parent = { naval_invader }
	
			gui_row = 11
		}
	
		naval_liason = {
			type = corps_commander
			modifier = {
				shore_bombardment_bonus = 0.20
			}
	
			ai_will_do = {
				factor = 1
			}
	
			trait_type = assignable_terrain_trait
			any_parent = { naval_invader }
	
			gui_row = 12
		}
	
		expert_improviser = {
			type = corps_commander
			modifier = {
				desert = {
					movement = 0.1
				}
				hills = {
					movement = 0.1
				}
				forest = {
					movement = 0.1
				}
				mountain = {
					movement = 0.1
				}
				plains = {
					movement = 0.1
				}
				urban = {
					movement = 0.1
				}
				jungle = {
					movement = 0.1
				}
				marsh = {
					movement = 0.1
				}
				radiation = {
					movement = 0.1
				}
			}
	
			override_effect_tooltip = expert_improviser_movement_bonus_on_land
	
			ai_will_do = {
				factor = 1
			}
	
			enable_ability = makeshift_bridges
	
			trait_type = assignable_terrain_trait
			prerequisites = {
				check_variable = { num_terrain_traits > 0 }
			}
			custom_prerequisite_tooltip = needs_at_least_one_terrain
	
			gui_row = 13
		}
	
		logistics_wizard = {
			type = corps_commander
	
			modifier = {
				supply_consumption_factor = -0.1
			}
			enable_ability = extra_suplies
			ai_will_do = {
				factor = 1
			}
			gui_row = 14
			trait_type = assignable_terrain_trait
			any_parent = { expert_improviser }
		}
	
		##################################
		# status traits
		##################################
	
		sick = {
			type = all
			trait_type = status_trait
	
			non_shared_modifier = {
				skill_bonus_factor = -0.5
				cannot_use_abilities = 1
			}
		}
		virus = {
			type = all
			trait_type = status_trait
	
			non_shared_modifier = {
				skill_bonus_factor = -0.5
				cannot_use_abilities = 1
			}
		}
		addicted = {
			type = all
			trait_type = status_trait
	
			non_shared_modifier = {
				skill_bonus_factor = -0.3
				cannot_use_abilities = 1
			}
	
			attack_skill = -2
			defense_skill = -2
		}
	
		wounded = {
			type = all
			trait_type = status_trait
	
			non_shared_modifier = {
				skill_bonus_factor = -0.5
				cannot_use_abilities = 1
			}
		}
	
		disgruntled = {
			type = all
			trait_type = status_trait
	
			attack_skill = -2
			defense_skill = -2
			logistics_skill = -2
			planning_skill = -2
		}
	
		demoted = {
			type = all
			trait_type = status_trait
	
			attack_skill = -1
			defense_skill = -1
			logistics_skill = -1
			planning_skill = -1
		}
	
		substance_abuser = {
			type = all
			trait_type = status_trait
			allowed = {
				owner_doesnt_have_robot_generals = yes
			}
		}
	
		substance_addict = {
			type = all
			trait_type = status_trait
			allowed = {
				has_trait = substance_abuser
			}
			attack_skill = -2
			defense_skill = -2
			logistics_skill = -2
			planning_skill = -2
		}
	
		hidden_sympathies = {
			type = all
			trait_type = status_trait
		}
	
		recently_promoted = {
			type = all
			trait_type = status_trait
	
			attack_skill = -1
			defense_skill = -1
			logistics_skill = -1
			planning_skill = -1
		}
	
		big = {
			type = all
			trait_type = status_trait
	
			modifier = {
				combat_width_factor = 0.2
			}
		}
	
		jim = {
			type = all
			trait_type = status_trait
	
			modifier = {
				army_speed_factor = 0.1
			}
		}
	
		best_pony = {
			type = all
			trait_type = status_trait
		}
	
		cartel_bloodthirsty_leader = {
			type = all
			allowed = {
				always = no # not gainable
			}
			modifier = {
				army_attack_factor = 0.05
				max_dig_in = -0.25
			}
		}
	
		cartel_leader = {
			type = all
			allowed = {
				always = no # not gainable
			}
			modifier = {
				out_of_supply_factor = -0.25
				offence = 0.1
			}
		}
	
		cartel_heiress_leader = {
			type = all
			allowed = {
				always = no # not gainable
			}
			modifier = {
				planning_speed = -0.15
				army_morale_factor = 0.1
			}
		}
	
		cartel_defeated = {
			type = all
			allowed = {
				always = no # not gainable
			}
			modifier = {
				experience_gain_factor = -0.75
				army_morale_factor = -0.10
			}
		}
	
		# defective_geneseed = { #needs more code support, remove before launch
		# 	type = all
		# 	trait_type = status_trait
		# 	gain_xp = {
		# 		OR = {
		# 			has_division_template_spacemarine = yes
		# 			has_chaos_corruption = yes
		# 		}
		# 	}
		# 	cost = 400
		# 	modifier = {
		# 		geneseed_defect_factor = 1
		# 	}
		# }
	
		ranger_trait = {
			type = corps_commander
			gain_xp = {
				always = no
			}
	
			modifier = {
				modifier_army_sub_unit_spec_ops_attack_factor = 0.025
				modifier_army_sub_unit_spec_ops_defence_factor = 0.025
				planning_speed = 0.1
			}
	
			ai_will_do = {
				factor = 1
			}
		}
	
		##################################
		# Special trait for exiled leaders
		##################################
	
		exiled_leader = {
			type = land
			trait_type = exile
			gain_xp = {
				always = no # not gainable
			}
	
			modifier = {
				exiled_divisions_attack_factor = 0.1
				own_exiled_divisions_attack_factor = 0.05
				exiled_divisions_defense_factor = 0.1
				own_exiled_divisions_defense_factor = 0.05
			}
	
			ai_will_do = {
				factor = 1
			}
			new_commander_weight = {
				factor = 0
			}
		}
	
		#trait so pre-made genrals don't get assigned random specials
		# dont_add_specials_loser = {
		# 	type = all
		# 	trait_type = status_trait
		# 	allowed = {
		# 		always = no
		# 	}
		# }
	}